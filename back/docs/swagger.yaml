basePath: /
definitions:
  controllers.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  controllers.RegistrationPayload:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
    required:
    - email
    - firstname
    - lastname
    type: object
  controllers.authSuccessResponse:
    properties:
      token:
        type: string
    type: object
  models.Reservation:
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample server for using Swagger with Echo.
  title: Swagger Example API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: User credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.authSuccessResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Authenticate a user
      tags:
      - Auth
  /customers:
    post:
      consumes:
      - application/json
      parameters:
      - description: Registration payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register as customer
      tags:
      - Users
  /event/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event found
          schema:
            type: object
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Event not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Get an event by ID
      tags:
      - Event
  /events:
    get:
      consumes:
      - application/json
      parameters:
      - description: Event name
        in: query
        name: name
        type: string
      - description: Event tag
        in: query
        name: tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Event found
          schema:
            type: object
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Event not found
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: Get events
      tags:
      - Event
  /organizers:
    post:
      consumes:
      - application/json
      parameters:
      - description: Registration payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegistrationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register as organizer
      tags:
      - Users
  /reservations:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Reservation request object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reservation'
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: delete reservation
      tags:
      - Reservation
    post:
      consumes:
      - application/json
      parameters:
      - description: Reservation object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reservation'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created
          schema:
            $ref: '#/definitions/models.Reservation'
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: add reservation
      tags:
      - Reservation
  /reservations/{customerId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: customerId
        in: path
        name: customerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully get
        "400":
          description: Bad request
          schema: {}
        "500":
          description: Internal server error
          schema: {}
      summary: get reservation by user
      tags:
      - Reservation
swagger: "2.0"
