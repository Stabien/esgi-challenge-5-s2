name: "Terraform"

on:
  push:
    branches: [ "feat/add-cd" ]
    paths:
      - ".github/workflows/terraform.yaml"
      - "./back/**"

env:
  TF_VAR_aws_credentials: '{ "access_key": "${{ secrets.AWS_ACCESS_KEY }}", "secret_key": "${{ secrets.AWS_SECRET_KEY }}" }'
  TF_VAR_db_config: '{ "host": "${{ secrets.DB_HOST }}", "port": "${{ secrets.DB_PORT }}", "username": "${{ secrets.DB_USERNAME }}", "password": "${{ secrets.DB_PASSWORD }}", "name": "${{ secrets.DB_NAME }}" }'
  TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
  TF_VAR_server_port: ${{ secrets.SERVER_PORT }}
  TF_VAR_git_ssh_key: ${{ secrets.SSH_GIT_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
  deploy-back:
    name: ðŸš€ Deploy back
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Connect to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.sshHostEC2 }}
          username: ${{ secrets.sshUsernameEC2 }}
          key: ${{ secrets.sshKeyEC2 }}
          port: ${{ secrets.sshPortEC2 }}
          script: |
            cd ../esgi-challenge-s4
            git pull origin develop
            sudo docker compose down
            sudo docker compose up -d